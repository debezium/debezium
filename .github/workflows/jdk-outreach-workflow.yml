name: Java Quality Outreach
on:
  schedule:
    - cron: 0 22 * * *

jobs:
  sqlserver:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [ 15, 16 ]
    name: SQL Server - Java ${{ matrix.feature }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup OpenJDK
        uses: sormuras/download-jdk@v1
        id: jdk
        with:
          feature: ${{ matrix.feature }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: Maven Build
        run: mvn clean install -B -pl debezium-connector-sqlserver -am -Passembly -Dformat.formatter.goal=validate -Dformat.imports.goal=check -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  mysql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [ 15, 16 ]
    name: MySQL - Java ${{ matrix.feature }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup OpenJDK
        uses: sormuras/download-jdk@v1
        id: jdk
        with:
          feature: ${{ matrix.feature }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: Maven Build
        run: mvn clean install -B -pl debezium-connector-mysql -am -Passembly -Dformat.formatter.goal=validate -Dformat.imports.goal=check -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  postgres-decoderbufs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [ 15, 16 ]
    name: PostgreSQL Decoderbufs - Java ${{ matrix.feature }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup OpenJDK
        uses: sormuras/download-jdk@v1
        id: jdk
        with:
          feature: ${{ matrix.feature }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: Maven Build
        run: mvn clean install -B -pl debezium-connector-postgres -am -Passembly -Dformat.formatter.goal=validate -Dformat.imports.goal=check -Dversion.postgres.server=9.6-devel -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  postgres-wal2json:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [ 15, 16 ]
    name: PostgreSQL Wal2JSON - Java ${{ matrix.feature }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup OpenJDK
        uses: sormuras/download-jdk@v1
        id: jdk
        with:
          feature: ${{ matrix.feature }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: Maven Build
        run: mvn clean install -B -pl debezium-connector-postgres -am -Passembly,wal2json-decoder -Dformat.formatter.goal=validate -Dformat.imports.goal=check -Dversion.postgres.server=9.6-devel -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  postgres-pgoutput:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [ 15, 16 ]
    name: PostgreSQL Pgoutput - Java ${{ matrix.feature }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup OpenJDK
        uses: sormuras/download-jdk@v1
        id: jdk
        with:
          feature: ${{ matrix.feature }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: Maven Build
        run: mvn clean install -B -pl debezium-connector-postgres -am -Passembly,pgoutput-decoder,postgres-10 -Ddebezium.test.records.waittime=5 -Dformat.formatter.goal=validate -Dformat.imports.goal=check -Dversion.postgres.server=10-devel -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  mongodb-40:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [ 15, 16 ]
    name: MongoDB 4.0 - Java ${{ matrix.feature }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup OpenJDK
        uses: sormuras/download-jdk@v1
        id: jdk
        with:
          feature: ${{ matrix.feature }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: Maven Build
        run: mvn clean install -B -pl debezium-connector-mongodb -am -Passembly -Dformat.formatter.goal=validate -Dformat.imports.goal=check -Dversion.mongo.server=4.0 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  quarkus-outbox:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [ 15, 16 ]
    name: Quarkus Outbox Extension - Java ${{ matrix.feature }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup OpenJDK
        uses: sormuras/download-jdk@v1
        id: jdk
        with:
          feature: ${{ matrix.feature }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: Maven Build
        run: mvn clean install -B -pl :debezium-quarkus-outbox -U -am -amd -Passembly -Dformat.formatter.goal=validate -Dformat.imports.goal=check -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [ 15, 16 ]
    name: Testing module - Java ${{ matrix.feature }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup OpenJDK
        uses: sormuras/download-jdk@v1
        id: jdk
        with:
          feature: ${{ matrix.feature }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ steps.jdk.outputs.version }}
          jdkFile: ${{ steps.jdk.outputs.file }}
      - name: Maven Build
        run: mvn clean install -B -pl debezium-testing -am -Passembly -Dformat.formatter.goal=validate -Dformat.imports.goal=check -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
