# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} %-5p  %X{dbz.connectorType}|%X{dbz.connectorName}|%X{dbz.connectorContext}  %m   [%c]%n

# Root logger option
log4j.rootLogger=INFO, stdout

# Set up the default logging to be INFO level, then override specific units
log4j.logger.io.debezium=INFO
#log4j.logger.io.debezium.embedded.EmbeddedEngine$EmbeddedConfig=WARN
#log4j.logger.io.debezium.embedded.EmbeddedEngine=DEBUG
#log4j.logger.io.debezium.connector.postgresql.RecordsStreamProducer=TRACE
#log4j.logger.io.debezium.connector.postgresql.connection.PostgresReplicationConnection=TRACE
#log4j.logger.io.debezium.connector.postgresql.PostgresConnectorTask=TRACE
#log4j.logger.io.debezium.connector.postgresql.PostgresValueConvertor=TRACE
#log4j.logger.io.debezium.connector.postgresql.RecordsSnapshotProducer=TRACE
#log4j.logger.io.debezium.connector.postgresql.RecordsStreamProducer=TRACE
#log4j.logger.io.debezium.connector.postgresql.TypeRegistry=TRACE
#log4j.logger.io.debezium.connector.postgresql.PostgresType=TRACE
#log4j.logger.io.debezium.connector.postgresql.StreamingWal2JsonMessageDecoder=TRACE
#log4j.logger.io.debezium.connector.postgresql.connection.wal2json.Wal2JsonReplicationMessage=TRACE
#log4j.logger.io.debezium.connector.postgresql.connection.pgproto.PgProtoReplicationMessage=TRACE
#log4j.logger.io.debezium.connector.postgresql.connection.pgproto.PgProtoMessageDecoder=TRACE
