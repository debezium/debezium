# Debezium CDC configuration
quarkus.debezium.offset.storage=org.apache.kafka.connect.storage.MemoryOffsetBackingStore
quarkus.debezium.name=native
quarkus.debezium.topic.prefix=dbserver1
quarkus.debezium.plugin.name=pgoutput
quarkus.debezium.snapshot.mode=initial
  
  
# Transformation
quarkus.debezium.transforms.t0.add.fields=op,table
quarkus.debezium.transforms.t0.add.headers=db,table
quarkus.debezium.transforms.t0.negate=false
quarkus.debezium.transforms.t0.predicate=p2
quarkus.debezium.transforms.t0.type=io.debezium.transforms.ExtractNewRecordState
quarkus.debezium.transforms=t0
quarkus.debezium.predicates.p2.pattern=inventory.inventory.products
quarkus.debezium.predicates.p2.type=org.apache.kafka.connect.transforms.predicates.TopicNameMatches
quarkus.debezium.predicates=p2

# PostProcessor
quarkus.debezium.post.processors=reselector
quarkus.debezium.post.processors.reselector.type=io.debezium.processors.reselect.ReselectColumnsPostProcessor
quarkus.debezium.post.processors.reselector.reselect.unavailable.values=true
quarkus.debezium.post.processors.reselector.reselect.null.values=true
quarkus.debezium.post.processors.reselector.reselect.use.event.key=false
quarkus.debezium.post.processors.reselector.reselect.error.handling.mode=WARN
quarkus.debezium.heartbeat.interval.ms=5



## deserializer
quarkus.debezium.capturing.product.destination=dbserver1.public.products
quarkus.debezium.capturing.product.deserializer=io.quarkus.sample.app.deserializer.ProductDeserializer

quarkus.datasource.devservices.enabled=false
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=native
quarkus.datasource.password=native
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/native
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=init.sql