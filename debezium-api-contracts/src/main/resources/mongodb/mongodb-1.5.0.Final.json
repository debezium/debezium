{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Generated by Debezium OpenAPI Generator",
    "version" : "1.5.0-SNAPSHOT"
  },
  "components" : {
    "schemas" : {
      "mongodb-1.5.0-SNAPSHOT" : {
        "title" : "mongodb-1.5.0-SNAPSHOT",
        "required" : [ "mongodb.name" ],
        "type" : "object",
        "properties" : {
          "mongodb.name" : {
            "title" : "Namespace",
            "description" : "Unique name that identifies the MongoDB replica set or cluster and all recorded offsets, andthat is used as a prefix for all schemas and topics. Each distinct MongoDB installation should have a separate namespace and monitored by at most one Debezium connector.",
            "type" : "string",
            "nullable" : false,
            "x-name" : "mongodb.name",
            "x-category" : "CONNECTION"
          },
          "mongodb.hosts" : {
            "format" : "list,regex",
            "title" : "Hosts",
            "description" : "The hostname and port pairs (in the form 'host' or 'host:port') of the MongoDB server(s) in the replica set.",
            "type" : "string",
            "x-name" : "mongodb.hosts",
            "x-category" : "CONNECTION"
          },
          "mongodb.members.auto.discover" : {
            "title" : "Auto-discovery",
            "description" : "Specifies whether the addresses in 'hosts' are seeds that should be used to discover all members of the cluster or replica set ('true'), or whether the address(es) in 'hosts' should be used as is ('false'). The default is 'true'.",
            "default" : true,
            "type" : "boolean",
            "x-name" : "mongodb.members.auto.discover",
            "x-category" : "CONNECTION"
          },
          "mongodb.user" : {
            "title" : "User",
            "description" : "Database user for connecting to MongoDB, if necessary.",
            "type" : "string",
            "x-name" : "mongodb.user",
            "x-category" : "CONNECTION"
          },
          "mongodb.password" : {
            "format" : "password",
            "title" : "Password",
            "description" : "Password to be used when connecting to MongoDB, if necessary.",
            "type" : "string",
            "x-name" : "mongodb.password",
            "x-category" : "CONNECTION"
          },
          "mongodb.poll.interval.ms" : {
            "format" : "int64",
            "title" : "Replica membership poll interval (ms)",
            "description" : "Interval for looking for new, removed, or changed replica sets, given in milliseconds.  Defaults to 30 seconds (30,000 ms).",
            "default" : 30000,
            "type" : "integer",
            "x-name" : "mongodb.poll.interval.ms",
            "x-category" : "CONNECTION"
          },
          "mongodb.ssl.enabled" : {
            "title" : "Enable SSL connection to MongoDB",
            "description" : "Should connector use SSL to connect to MongoDB instances",
            "default" : false,
            "type" : "boolean",
            "x-name" : "mongodb.ssl.enabled",
            "x-category" : "CONNECTION_ADVANCED_SSL"
          },
          "mongodb.ssl.invalid.hostname.allowed" : {
            "title" : "Allow invalid hostnames for SSL connection",
            "description" : "Whether invalid host names are allowed when using SSL. If true the connection will not prevent man-in-the-middle attacks",
            "default" : false,
            "type" : "boolean",
            "x-name" : "mongodb.ssl.invalid.hostname.allowed",
            "x-category" : "CONNECTION_ADVANCED_SSL"
          },
          "mongodb.connect.timeout.ms" : {
            "format" : "int32",
            "title" : "Connect Timeout MS",
            "description" : "The connection timeout, given in milliseconds. Defaults to 10 seconds (10,000 ms).",
            "default" : 10000,
            "type" : "integer",
            "x-name" : "mongodb.connect.timeout.ms",
            "x-category" : "CONNECTION_ADVANCED"
          },
          "connect.backoff.initial.delay.ms" : {
            "format" : "int64",
            "title" : "Initial delay before reconnection (ms)",
            "description" : "The initial delay when trying to reconnect to a primary after a connection cannot be made or when no primary is available, given in milliseconds. Defaults to 1 second (1,000 ms).",
            "default" : 1000,
            "type" : "integer",
            "x-name" : "connect.backoff.initial.delay.ms",
            "x-category" : "CONNECTION_ADVANCED"
          },
          "connect.backoff.max.delay.ms" : {
            "format" : "int64",
            "title" : "Maximum delay before reconnection (ms)",
            "description" : "The maximum delay when trying to reconnect to a primary after a connection cannot be made or when no primary is available, given in milliseconds. Defaults to 120 second (120,000 ms).",
            "default" : 120000,
            "type" : "integer",
            "x-name" : "connect.backoff.max.delay.ms",
            "x-category" : "CONNECTION_ADVANCED"
          },
          "mongodb.authsource" : {
            "title" : "Credentials Database",
            "description" : "Database containing user credentials.",
            "default" : "admin",
            "type" : "string",
            "x-name" : "mongodb.authsource",
            "x-category" : "CONNECTION_ADVANCED"
          },
          "connect.max.attempts" : {
            "format" : "int32",
            "title" : "Connection attempt limit",
            "description" : "Maximum number of failed connection attempts to a replica set primary before an exception occurs and task is aborted. Defaults to 16, which with the defaults for 'connect.backoff.initial.delay.ms' and 'connect.backoff.max.delay.ms' results in just over 20 minutes of attempts before failing.",
            "default" : 16,
            "type" : "integer",
            "x-name" : "connect.max.attempts",
            "x-category" : "CONNECTION_ADVANCED"
          },
          "mongodb.server.selection.timeout.ms" : {
            "format" : "int32",
            "title" : "Server selection timeout MS",
            "description" : "The server selection timeout, given in milliseconds. Defaults to 10 seconds (10,000 ms).",
            "default" : 30000,
            "type" : "integer",
            "x-name" : "mongodb.server.selection.timeout.ms",
            "x-category" : "CONNECTION_ADVANCED"
          },
          "mongodb.socket.timeout.ms" : {
            "format" : "int32",
            "title" : "Socket timeout MS",
            "description" : "The socket timeout, given in milliseconds. Defaults to 0 ms.",
            "default" : 0,
            "type" : "integer",
            "x-name" : "mongodb.socket.timeout.ms",
            "x-category" : "CONNECTION_ADVANCED"
          },
          "database.include.list" : {
            "format" : "list,regex",
            "title" : "Include Databases",
            "description" : "A comma-separated list of regular expressions that match the database names for which changes are to be captured",
            "type" : "string",
            "x-name" : "database.include.list",
            "x-category" : "FILTERS"
          },
          "database.exclude.list" : {
            "format" : "list,regex",
            "title" : "Exclude Databases",
            "description" : "A comma-separated list of regular expressions that match the database names for which changes are to be excluded",
            "type" : "string",
            "x-name" : "database.exclude.list",
            "x-category" : "FILTERS"
          },
          "collection.include.list" : {
            "format" : "list,regex",
            "title" : "Include Collections",
            "description" : "A comma-separated list of regular expressions that match the collection names for which changes are to be captured",
            "type" : "string",
            "x-name" : "collection.include.list",
            "x-category" : "FILTERS"
          },
          "collection.exclude.list" : {
            "description" : "A comma-separated list of regular expressions that match the collection names for which changes are to be excluded",
            "type" : "string",
            "x-name" : "collection.exclude.list",
            "x-category" : "FILTERS"
          },
          "field.exclude.list" : {
            "title" : "Exclude Fields",
            "description" : "A comma-separated list of the fully-qualified names of fields that should be excluded from change event message values",
            "type" : "string",
            "x-name" : "field.exclude.list",
            "x-category" : "FILTERS"
          },
          "snapshot.mode" : {
            "title" : "Snapshot mode",
            "description" : "The criteria for running a snapshot upon startup of the connector. Options include: 'initial' (the default) to specify the connector should always perform an initial sync when required; 'never' to specify the connector should never perform an initial sync ",
            "default" : "initial",
            "enum" : [ "never", "initial" ],
            "type" : "string",
            "x-name" : "snapshot.mode",
            "x-category" : "CONNECTOR_SNAPSHOT"
          },
          "snapshot.collection.filter.overrides" : {
            "title" : "Snapshot mode",
            "description" : "This property contains a comma-separated list of <dbName>.<collectionName>, for which  the initial snapshot may be a subset of data present in the data source. The subset would be defined by mongodb filter query specified as value for property snapshot.collection.filter.override.<dbname>.<collectionName>",
            "type" : "string",
            "x-name" : "snapshot.collection.filter.overrides",
            "x-category" : "CONNECTOR_SNAPSHOT"
          },
          "snapshot.include.collection.list" : {
            "format" : "list,regex",
            "title" : "Snapshot mode include data collection",
            "description" : "this setting must be set to specify a list of tables/collections whose snapshot must be taken on creating or restarting the connector.",
            "type" : "string",
            "x-name" : "snapshot.include.collection.list",
            "x-category" : "CONNECTOR_SNAPSHOT"
          },
          "snapshot.fetch.size" : {
            "format" : "int32",
            "title" : "Snapshot fetch size",
            "description" : "The maximum number of records that should be loaded into memory while performing a snapshot",
            "type" : "integer",
            "x-name" : "snapshot.fetch.size",
            "x-category" : "CONNECTOR_SNAPSHOT"
          },
          "snapshot.delay.ms" : {
            "format" : "int64",
            "title" : "Snapshot Delay (milliseconds)",
            "description" : "A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms.",
            "default" : 0,
            "type" : "integer",
            "x-name" : "snapshot.delay.ms",
            "x-category" : "CONNECTOR_SNAPSHOT"
          },
          "snapshot.max.threads" : {
            "format" : "int32",
            "title" : "Snapshot maximum threads",
            "description" : "The maximum number of threads used to perform the snapshot.  Defaults to 1.",
            "default" : 1,
            "type" : "integer",
            "x-name" : "snapshot.max.threads",
            "x-category" : "CONNECTOR_SNAPSHOT"
          },
          "tombstones.on.delete" : {
            "title" : "Change the behaviour of Debezium with regards to delete operations",
            "description" : "Whether delete operations should be represented by a delete event and a subsquenttombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted.",
            "default" : true,
            "type" : "boolean",
            "x-name" : "tombstones.on.delete",
            "x-category" : "CONNECTOR"
          },
          "heartbeat.interval.ms" : {
            "format" : "int32",
            "title" : "Connector heartbeat interval (milli-seconds)",
            "description" : "Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default.",
            "default" : 0,
            "type" : "integer",
            "x-name" : "heartbeat.interval.ms",
            "x-category" : "ADVANCED_HEARTBEAT"
          },
          "heartbeat.topics.prefix" : {
            "title" : "A prefix used for naming of heartbeat topics",
            "description" : "The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat.",
            "default" : "__debezium-heartbeat",
            "type" : "string",
            "x-name" : "heartbeat.topics.prefix",
            "x-category" : "ADVANCED_HEARTBEAT"
          },
          "field.renames" : {
            "title" : "Rename Fields",
            "description" : "",
            "type" : "string",
            "x-name" : "field.renames",
            "x-category" : "CONNECTOR_ADVANCED"
          },
          "converters" : {
            "title" : "List of prefixes defining custom values converters.",
            "description" : "Optional list of custom converters that would be used instead of default ones. The converters are defined using '<converter.prefix>.type' config option and configured using options '<converter.prefix>.<option>'",
            "type" : "string",
            "x-name" : "converters",
            "x-category" : "CONNECTOR_ADVANCED"
          },
          "provide.transaction.metadata" : {
            "title" : "Store transaction metadata information in a dedicated topic.",
            "description" : "Enables transaction metadata extraction together with event counting",
            "default" : false,
            "type" : "boolean",
            "x-name" : "provide.transaction.metadata",
            "x-category" : "CONNECTOR_ADVANCED"
          },
          "sanitize.field.names" : {
            "title" : "Sanitize field names to adhere to Avro naming conventions",
            "description" : "Whether field names will be sanitized to Avro naming conventions",
            "default" : false,
            "type" : "boolean",
            "x-name" : "sanitize.field.names",
            "x-category" : "CONNECTOR_ADVANCED"
          },
          "skipped.operations" : {
            "format" : "list,regex",
            "title" : "skipped Operations",
            "description" : "The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts/create; 'u' for updates; 'd' for deletes. By default, no operations will be skipped.",
            "type" : "string",
            "x-name" : "skipped.operations",
            "x-category" : "ADVANCED"
          },
          "event.processing.failure.handling.mode" : {
            "title" : "Event deserialization failure handling",
            "description" : "Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including:'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped;'ignore' the problematic event will be skipped.",
            "default" : "fail",
            "enum" : [ "warn", "fail", "ignore", "skip" ],
            "type" : "string",
            "x-name" : "event.processing.failure.handling.mode",
            "x-category" : "ADVANCED"
          },
          "query.fetch.size" : {
            "format" : "int32",
            "title" : "Query fetch size",
            "description" : "The maximum number of records that should be loaded into memory while streaming.  A value of `0` uses the default JDBC fetch size.",
            "default" : 0,
            "type" : "integer",
            "x-name" : "query.fetch.size",
            "x-category" : "ADVANCED"
          },
          "max.batch.size" : {
            "format" : "int32",
            "title" : "Change event batch size",
            "description" : "Maximum size of each batch of source records. Defaults to 2048.",
            "default" : 2048,
            "type" : "integer",
            "x-name" : "max.batch.size",
            "x-category" : "ADVANCED"
          },
          "max.queue.size" : {
            "format" : "int32",
            "title" : "Change event buffer size",
            "description" : "Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size.",
            "default" : 8192,
            "type" : "integer",
            "x-name" : "max.queue.size",
            "x-category" : "ADVANCED"
          },
          "max.queue.size.in.bytes" : {
            "format" : "int64",
            "title" : "Change event buffer size in bytes",
            "description" : "Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled",
            "default" : 0,
            "type" : "integer",
            "x-name" : "max.queue.size.in.bytes",
            "x-category" : "ADVANCED"
          },
          "poll.interval.ms" : {
            "format" : "int64",
            "title" : "Poll interval (ms)",
            "description" : "Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms.",
            "default" : 500,
            "type" : "integer",
            "x-name" : "poll.interval.ms",
            "x-category" : "ADVANCED"
          },
          "retriable.restart.connector.wait.ms" : {
            "format" : "int64",
            "title" : "Retriable restart wait (ms)",
            "description" : "Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms.",
            "default" : 10000,
            "type" : "integer",
            "x-name" : "retriable.restart.connector.wait.ms",
            "x-category" : "ADVANCED"
          },
          "source.struct.version" : {
            "title" : "Source struct maker version",
            "description" : "A version of the format of the publicly visible source part in the message",
            "default" : "v2",
            "enum" : [ "v1", "v2" ],
            "type" : "string",
            "x-name" : "source.struct.version",
            "x-category" : "ADVANCED"
          }
        },
        "additionalProperties" : true,
        "x-version" : "1.5.0-SNAPSHOT",
        "x-className" : "io.debezium.connector.mongodb.MongoDbConnector"
      }
    }
  }
}
