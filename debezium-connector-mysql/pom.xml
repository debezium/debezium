<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.debezium</groupId>
        <artifactId>debezium-parent</artifactId>
        <version>0.4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>debezium-connector-mysql</artifactId>
    <name>Debezium Connector for MySQL</name>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.shyiko</groupId>
            <artifactId>mysql-binlog-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-core</artifactId>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-embedded</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-embedded</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-avro-converter</artifactId>
        </dependency>
    </dependencies>
    <properties>
        <!-- 
        Specify the properties that will be used for setting up the integration tests' Docker container.
        Note that the `dockerhost.ip` property is computed from the IP address of DOCKER_HOST, which will
        work on all platforms. We'll set some of these as system properties during integration testing.
        -->
        <database.port>3306</database.port>
        <database.user>mysqluser</database.user>
        <database.password>mysqlpw</database.password>
        <database.gtid.port>3306</database.gtid.port>
        <database.gtid.replica.port>3306</database.gtid.replica.port>
        <database.replica.port>3306</database.replica.port> <!-- by default use master as 'replica' -->
        <database.replica.user>mysqlreplica</database.replica.user>
        <database.replica.password>mysqlpw</database.replica.password>
        <database.alt.port>3306</database.alt.port>
        <database.alt.gtid.port>3306</database.alt.gtid.port>
        <database.alt.replica.port>4306</database.alt.replica.port>
        <!--
        By default, we should use the docker image maintained by the MySQL team. This property is changed with different profiles.
        However, we run one container with GTIDs and one without.
        -->
        <docker.image>debezium/mysql-server-test-database</docker.image>
        <docker.skip>false</docker.skip>
    </properties>
    <build>
        <plugins>
            <plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <configuration>
                <watchInterval>500</watchInterval>
                <logDate>default</logDate>
                <verbose>true</verbose>
                <autoPull>always</autoPull>
                <images>
                  <!--
                  Images based on "mysql/mysql-server" Docker image
                  -->
                  <image>
                    <!-- A Docker image using a partial MySQL installation maintained by MySQL team. -->
                    <name>debezium/mysql-server-test-database</name>
                    <alias>database</alias>
                    <run>
                      <namingStrategy>alias</namingStrategy>
                      <env>
                        <MYSQL_ROOT_PASSWORD>debezium-rocks</MYSQL_ROOT_PASSWORD>
                        <MYSQL_DATABASE>mysql</MYSQL_DATABASE> <!-- database created upon init -->
                        <MYSQL_USER>${database.user}</MYSQL_USER>
                        <MYSQL_PASSWORD>${database.password}</MYSQL_PASSWORD>
                      </env>
                      <ports>
                        <port>${database.port}:3306</port>
                      </ports>
                      <log>
                        <prefix>mysql</prefix>
                        <enabled>true</enabled>
                        <color>yellow</color>
                      </log>
                      <wait>
                        <log>MySQL init process done. Ready for start up.</log>
                        <time>30000</time> <!-- 30 seconds max -->
                      </wait>
                    </run>
                    <build>
                      <from>mysql/mysql-server:${version.mysql.server}</from>
                      <assembly>
                        <inline>
                          <fileSets>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/server</directory>
                              <includes>
                                <include>my.cnf</include>
                              </includes>
                              <outputDirectory>etc/mysql</outputDirectory>
                            </fileSet>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/init</directory>
                              <outputDirectory>docker-entrypoint-initdb.d</outputDirectory>
                            </fileSet>
                          </fileSets>
                        </inline>
                        <basedir>/</basedir>
                      </assembly>
                    </build>
                  </image>
                  <image>
                    <!-- A Docker image using a partial MySQL installation maintained by MySQL team. -->
                    <name>debezium/mysql-server-gtids-test-database</name>
                    <alias>database-gtids</alias>
                    <run>
                      <namingStrategy>alias</namingStrategy>
                      <env>
                        <MYSQL_ROOT_PASSWORD>debezium-rocks</MYSQL_ROOT_PASSWORD>
                        <MYSQL_DATABASE>mysql</MYSQL_DATABASE> <!-- database created upon init -->
                        <MYSQL_USER>${database.user}</MYSQL_USER>
                        <MYSQL_PASSWORD>${database.password}</MYSQL_PASSWORD>
                      </env>
                      <ports>
                        <port>${database.gtid.port}:3306</port>
                      </ports>
                      <log>
                        <prefix>mysql-gtids</prefix>
                        <enabled>true</enabled>
                        <color>cyan</color>
                      </log>
                      <wait>
                        <log>MySQL init process done. Ready for start up.</log>
                        <time>30000</time>
                      </wait>
                    </run>
                    <build>
                      <from>mysql/mysql-server:${version.mysql.server}</from>
                      <assembly>
                        <inline>
                          <fileSets>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/server-gtids</directory>
                              <includes>
                                <include>my.cnf</include>
                              </includes>
                              <outputDirectory>etc/mysql</outputDirectory>
                            </fileSet>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/init</directory>
                              <outputDirectory>docker-entrypoint-initdb.d</outputDirectory>
                            </fileSet>
                          </fileSets>
                        </inline>
                        <basedir>/</basedir>
                      </assembly>
                    </build>
                  </image>
                  <image>
                    <!-- 
                    A Docker image using a MySQL installation maintained by MySQL team
                    that is a replica of `debezium/mysql-server-gtids-test-database`
                    -->
                    <name>debezium/mysql-server-gtids-test-database-replica</name>
                    <alias>replica-gtids</alias>
                    <run>
                      <namingStrategy>alias</namingStrategy>
                      <env>
                        <MYSQL_ROOT_PASSWORD>debezium-rocks</MYSQL_ROOT_PASSWORD>
                        <MYSQL_USER>${database.replica.user}</MYSQL_USER>
                        <MYSQL_PASSWORD>${database.replica.password}</MYSQL_PASSWORD>
                      </env>
                      <links>
                        <link>database-gtids</link>
                      </links>
                      <ports>
                        <port>${database.gtid.replica.port}:3306</port>
                      </ports>
                      <log>
                        <prefix>mysql-gtids-replica</prefix>
                        <enabled>true</enabled>
                        <color>yellow</color>
                      </log>
                      <wait>
                        <log>MySQL init process done. Ready for start up.</log>
                        <time>30000</time> <!-- 30 seconds max -->
                      </wait>
                    </run>
                    <build>
                      <from>mysql/mysql-server:${version.mysql.server}</from>
                      <assembly>
                        <inline>
                          <fileSets>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/server-replica</directory>
                              <includes>
                                <include>my.cnf</include>
                              </includes>
                              <outputDirectory>etc/mysql</outputDirectory>
                            </fileSet>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/init-replica</directory>
                              <outputDirectory>docker-entrypoint-initdb.d</outputDirectory>
                            </fileSet>
                          </fileSets>
                        </inline>
                        <basedir>/</basedir>
                      </assembly>
                    </build>
                  </image>
                  <!--
                  Images based on "mysql" Docker image that includes 'mysqlbinlog' utility.
                  -->
                  <image>
                    <!-- A Docker image using a complete MySQL installation maintained by Docker team. -->
                    <name>debezium/mysql-test-alt-database</name>
                    <alias>database-alt</alias>
                    <run>
                      <namingStrategy>alias</namingStrategy>
                      <env>
                        <MYSQL_ROOT_PASSWORD>debezium-rocks</MYSQL_ROOT_PASSWORD>
                        <MYSQL_DATABASE>mysql</MYSQL_DATABASE> <!-- database created upon init -->
                        <MYSQL_USER>${database.user}</MYSQL_USER>
                        <MYSQL_PASSWORD>${database.password}</MYSQL_PASSWORD>
                      </env>
                      <ports>
                        <port>${database.alt.port}:3306</port>
                      </ports>
                      <log>
                        <prefix>alt-mysql</prefix>
                        <enabled>true</enabled>
                        <color>magenta</color>
                      </log>
                      <wait>
                        <log>MySQL init process done. Ready for start up.</log>
                        <time>30000</time>
                      </wait>
                    </run>
                    <build>
                      <from>mysql:${version.mysql.server}</from>
                      <assembly>
                        <inline>
                          <fileSets>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/alt-server</directory>
                              <includes>
                                <include>my.cnf</include>
                              </includes>
                              <outputDirectory>etc/mysql/conf.d</outputDirectory>
                            </fileSet>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/init</directory>
                              <outputDirectory>docker-entrypoint-initdb.d</outputDirectory>
                            </fileSet>
                          </fileSets>
                        </inline>
                        <basedir>/</basedir>
                      </assembly>
                    </build>
                  </image>
                  <image>
                    <!-- A Docker image using a complete MySQL installation maintained by Docker team. -->
                    <name>debezium/mysql-test-alt-database-gtids</name>
                    <alias>alt-database-gtids</alias>
                    <run>
                      <namingStrategy>alias</namingStrategy>
                      <env>
                        <MYSQL_ROOT_PASSWORD>debezium-rocks</MYSQL_ROOT_PASSWORD>
                        <MYSQL_DATABASE>mysql</MYSQL_DATABASE> <!-- database created upon init -->
                        <MYSQL_USER>${database.user}</MYSQL_USER>
                        <MYSQL_PASSWORD>${database.password}</MYSQL_PASSWORD>
                      </env>
                      <ports>
                        <port>${database.alt.gtid.port}:3306</port>
                      </ports>
                      <log>
                        <prefix>alt-mysql-gtids</prefix>
                        <enabled>true</enabled>
                        <color>cyan</color>
                      </log>
                      <wait>
                        <log>MySQL init process done. Ready for start up.</log>
                        <time>30000</time>
                      </wait>
                    </run>
                    <build>
                      <from>mysql:${version.mysql.server}</from>
                      <assembly>
                        <inline>
                          <fileSets>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/alt-server-gtids</directory>
                              <includes>
                                <include>my.cnf</include>
                              </includes>
                              <outputDirectory>etc/mysql/conf.d</outputDirectory>
                            </fileSet>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/init</directory>
                              <outputDirectory>docker-entrypoint-initdb.d</outputDirectory>
                            </fileSet>
                          </fileSets>
                        </inline>
                        <basedir>/</basedir>
                      </assembly>
                    </build>
                  </image>
                  <image>
                    <!-- A Docker image using a complete MySQL installation maintained by Docker team. -->
                    <name>debezium/mysql-test-alt-database-gtids-replica</name>
                    <alias>alt-replica-gtids</alias>
                    <run>
                      <namingStrategy>alias</namingStrategy>
                      <env>
                        <MYSQL_ROOT_PASSWORD>debezium-rocks</MYSQL_ROOT_PASSWORD>
                        <MYSQL_DATABASE>mysql</MYSQL_DATABASE> <!-- database created upon init -->
                        <MYSQL_USER>${database.replica.user}</MYSQL_USER>
                        <MYSQL_PASSWORD>${database.replica.password}</MYSQL_PASSWORD>
                      </env>
                      <ports>
                        <port>${database.alt.replica.port}:3306</port>
                      </ports>
                      <links>
                        <link>alt-database-gtids</link>
                      </links>
                      <log>
                        <prefix>alt-mysql-replica</prefix>
                        <enabled>true</enabled>
                        <color>yellow</color>
                      </log>
                      <wait>
                        <log>MySQL init process done. Ready for start up.</log>
                        <time>30000</time>
                      </wait>
                    </run>
                    <build>
                      <from>mysql:${version.mysql.server}</from>
                      <assembly>
                        <inline>
                          <fileSets>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/alt-server-replica</directory>
                              <includes>
                                <include>my.cnf</include>
                              </includes>
                              <outputDirectory>etc/mysql/conf.d</outputDirectory>
                            </fileSet>
                            <fileSet>
                              <directory>${project.basedir}/src/test/docker/init-alt-replica</directory>
                              <outputDirectory>docker-entrypoint-initdb.d</outputDirectory>
                            </fileSet>
                          </fileSets>
                        </inline>
                        <basedir>/</basedir>
                      </assembly>
                    </build>
                  </image>
                </images>
              </configuration>
              <!--
              Connect this plugin to the maven lifecycle around the integration-test phase:
              start the container in pre-integration-test and stop it in post-integration-test.
              -->
              <executions>
                <execution>
                  <id>start</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>build</goal>
                    <goal>start</goal>
                  </goals>
                </execution>
                <execution>
                  <id>stop</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <!-- 
            Unlike surefire, the failsafe plugin ensures 'post-integration-test' phase always runs, even
            when there are failed integration tests. We rely upon this to always shut down the Docker container
            after the integration tests (defined as '*IT.java') are run.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipTests>${skipITs}</skipTests>
                    <enableAssertions>true</enableAssertions>
                    <systemPropertyVariables>
                        <!-- Make these available to the tests via system properties -->
                        <database.hostname>${docker.host.address}</database.hostname>
                        <database.port>${database.port}</database.port>
                        <database.user>${database.user}</database.user>
                        <database.password>${database.password}</database.password>
                        <database.replica.hostname>${docker.host.address}</database.replica.hostname>
                        <database.replica.port>${database.replica.port}</database.replica.port>
                        <skipLongRunningTests>${skipLongRunningTests}</skipLongRunningTests>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <!-- Apply the properties set in the POM to the resource files -->
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*</include>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*</include>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>
    </build>
    <!--
    Define several useful profiles
    -->
    <profiles>
        <!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
              This assembly profile is used during official builds. In addition to 
              compiling, and running the unit and integration tests like the non-assembly
              profiles, this provfile creates additional (like the connector plugin archives),
              starts up all three Docker containers (normal MySQL, MySQL+GTIDs, and alt-MySQL)
              and runs the integration tests against each of them.

              To use, specify "-Passembly" on the Maven command line.
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <profile>
            <id>assembly</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
              <!-- Run multiple images at the same time, but use different ports for all MySQL servers -->
              <docker.image>debezium/mysql-server-test-database,debezium/mysql-server-gtids-test-database,debezium/mysql-server-gtids-test-database-replica,debezium/mysql-test-alt-database,debezium/mysql-test-alt-database-gtids,debezium/mysql-test-alt-database-gtids-replica</docker.image>
              <database.port>3306</database.port>
              <database.gtid.port>4306</database.gtid.port>
              <database.gtid.replica.port>5306</database.gtid.replica.port>
              <database.alt.port>6306</database.alt.port>
              <database.alt.gtid.port>7306</database.alt.gtid.port>
              <database.alt.replica.port>8306</database.alt.replica.port>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>io.debezium</groupId>
                                <artifactId>debezium-assembly-descriptors</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <finalName>${project.artifactId}-${project.version}</finalName>
                                    <attach>true</attach>  <!-- we want attach & deploy these to Maven -->
                                    <descriptorRefs>
                                        <descriptorRef>connector-distribution</descriptorRef>
                                    </descriptorRefs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- 
                    Override the failsafe plugin to run the integration tests for each set of databases. 
                    But make sure each database server is used only once ...
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <!-- First run the integration tests with the non-GTID server alone -->
                            <execution>
                                <id>integration-test-mysql</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <!-- same port for both, since we're only running one server -->
                                        <database.port>${database.port}</database.port>
                                        <database.replica.port>${database.port}</database.replica.port>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <!-- Then run the integration tests with the GTID server + replica server -->
                            <execution>
                                <id>integration-test-mysql-gtids-with-replica</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <database.port>${database.gtid.port}</database.port>
                                        <database.replica.port>${database.gtid.replica.port}</database.replica.port>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <!-- Then run the integration tests with the Docker's MySQL server (without GTIDs) -->
                            <execution>
                                <id>integration-test-alt-mysql</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <!-- same port for both, since we're only running one server -->
                                        <database.port>${database.alt.port}</database.port>
                                        <database.replica.port>${database.alt.port}</database.replica.port>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <!-- Then run the integration tests with the Docker's MySQL server with GTIDs + replica -->
                            <execution>
                                <id>integration-test-alt-mysql-replica</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <!-- same port for both, since we're only running one server -->
                                        <database.port>${database.alt.gtid.port}</database.port>
                                        <database.replica.port>${database.alt.replica.port}</database.replica.port>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skipTests>${skipITs}</skipTests>
                            <enableAssertions>true</enableAssertions>
                            <systemPropertyVariables>
                                <!-- Make these available to the tests via system properties -->
                                <database.hostname>${docker.host.address}</database.hostname>
                                <database.user>${database.user}</database.user>
                                <database.password>${database.password}</database.password>
                                <database.replica.hostname>${docker.host.address}</database.replica.hostname>
                                <database.replica.user>${database.replica.user}</database.replica.user>
                                <database.replica.password>${database.replica.password}</database.replica.password>
                                <skipLongRunningTests>false</skipLongRunningTests>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

      <!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            Do not perform any Docker-related functionality
            To use, specify "-DskipITs" on the Maven command line.
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <profile>
        <id>skip-integration-tests</id>
        <activation>
          <activeByDefault>false</activeByDefault>
          <property>
            <name>skipITs</name>
          </property>
        </activation>
        <properties>
          <docker.skip>true</docker.skip>
        </properties>
      </profile>
      <!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            Use the alternative Docker image for MySQL.
            To use, specify "-Dmysql-gtids" or -Pmysql-gtids on the Maven command line.
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <profile>
        <id>mysql-gtids</id>
        <activation>
          <activeByDefault>false</activeByDefault>
          <property>
            <name>mysql-gtids</name>
          </property>
        </activation>
        <properties>
          <docker.image>debezium/mysql-server-gtids-test-database</docker.image>
        </properties>
      </profile>
      <!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            Use the alternative Docker image for MySQL.
            To use, specify "-Dalt-mysql" or -Palt-mysql on the Maven command line.
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <profile>
        <id>alt-mysql</id>
        <activation>
          <activeByDefault>false</activeByDefault>
          <property>
            <name>alt-mysql</name>
          </property>
        </activation>
        <properties>
          <docker.image>debezium/mysql-test-alt-database</docker.image>
        </properties>
      </profile>
      <!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            Use the Docker image for MySQL configured to use GTIDs.
            To use, specify "-Dalt-mysql-gtids" or -Palt-mysql-gtids on the Maven command line.
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <profile>
        <id>alt-mysql-gtids</id>
        <activation>
          <activeByDefault>false</activeByDefault>
          <property>
            <name>alt-mysql-gtids</name>
          </property>
        </activation>
        <properties>
          <docker.image>debezium/mysql-test-alt-database-gtids</docker.image>
        </properties>
      </profile>
      <!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            Use the Docker image for a MySQL replica of another MySQL server 
            configured to use GTIDs. To use, specify "-Dmysql-replica" 
            or -Pmysql-replica on the Maven command line.
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <profile>
        <id>mysql-replica</id>
        <activation>
          <activeByDefault>false</activeByDefault>
          <property>
            <name>mysql-replica</name>
          </property>
        </activation>
        <properties>
          <database.replica.port>4306</database.replica.port>
          <docker.image>debezium/mysql-server-gtids-test-database,debezium/mysql-server-gtids-test-database-replica</docker.image>
        </properties>
      </profile>
      <!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            Use the Docker image for a MySQL replica of another MySQL server 
            configured to use GTIDs. To use, specify "-Dalt-mysql-replica" 
            or -Palt-mysql-replica on the Maven command line.
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <profile>
        <id>alt-mysql-replica</id>
        <activation>
          <activeByDefault>false</activeByDefault>
          <property>
            <name>alt-mysql-replica</name>
          </property>
        </activation>
        <properties>
          <database.replica.port>4306</database.replica.port>
          <docker.image>debezium/mysql-test-alt-database-gtids,debezium/mysql-test-alt-database-gtids-replica</docker.image>
        </properties>
      </profile>
    </profiles>
</project>
