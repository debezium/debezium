/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("buildlogic.java-conventions")
}

dependencies {
    api(libs.org.testcontainers.testcontainers)
    api(libs.org.testcontainers.kafka)
    api(libs.com.squareup.okhttp3.okhttp)
    api(libs.org.awaitility.awaitility)
    api(libs.com.fasterxml.jackson.core.jackson.core)
    api(libs.com.fasterxml.jackson.core.jackson.databind)
    api(libs.org.testcontainers.postgresql)
    api(libs.org.testcontainers.mongodb)
    api(libs.org.testcontainers.mysql)
    api(libs.org.testcontainers.mariadb)
    api(libs.org.testcontainers.mssqlserver)
    api(libs.org.testcontainers.oracle.xe)
    api(libs.org.junit.platform.junit.platform.launcher)
    api(libs.org.junit.jupiter.junit.jupiter)
    api(libs.io.quarkus.quarkus.test.common)
    testImplementation(project(":debezium-core"))
    testImplementation(libs.org.assertj.assertj.core)
    testImplementation(libs.org.mockito.mockito.core)
    testImplementation(libs.org.postgresql.postgresql)
    testImplementation(libs.org.mongodb.mongodb.driver.sync)
    testImplementation(libs.ch.qos.logback.logback.classic)
    testImplementation(libs.org.apache.kafka.kafka.clients)
    testImplementation(libs.com.jayway.jsonpath.json.path)
    compileOnly(libs.org.testcontainers.jdbc)
}

description = "Debezium Testing Testcontainers"

val testsJar by tasks.registering(Jar::class) {
    archiveClassifier = "tests"
    from(sourceSets["test"].output)
}

(publishing.publications["maven"] as MavenPublication).artifact(testsJar)
