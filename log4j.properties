kafka.logs.dir=logs

log4j.rootLogger=INFO, stdout, appender

# Disable excessive reflection warnings - KAFKA-5229
log4j.logger.org.reflections=ERROR

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.threshold=INFO
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} %-5p  %X{dbz.connectorType}|%X{dbz.connectorName}|%X{dbz.connectorContext}  %m   [%c]%n


log4j.appender.appender=org.apache.log4j.RollingFileAppender
log4j.appender.appender.policy.type=SizeBasedTriggeringPolicy
log4j.appender.appender.policy.size=100MB
log4j.appender.appender.strategy.type=DefaultRolloverStrategy
log4j.appender.appender.File=${kafka.logs.dir}/connect-service.log
log4j.appender.appender.ImmediateFlush=true
log4j.appender.appender.MaxFileSize=100KB
log4j.appender.appender.MaxBackupIndex=10000
log4j.appender.appender.layout=org.apache.log4j.PatternLayout
# TODO: find out how to generate files in a specific pattern
# log4j.appender.appender.filePattern=${kafka.logs.dir}/connect-service-%d{yyyy-MM-dd}-%i.log
log4j.appender.appender.layout.ConversionPattern=%d{ISO8601} %-5p  %X{dbz.connectorType}|%X{dbz.connectorName}|%X{dbz.connectorContext}  %m   [%c]%n
